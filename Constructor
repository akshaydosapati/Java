/*A constructor is a member method with no return type and it's name should be same as class name
 *Whenever we creates an object, it communicates with JVM for the object creation and space needed to construct the class will be given by constructor 
 *It means, constructor used to allocate memory to object
 */

class Calci{
    int a;
    int b;
    /*default constructor
     *The below one is the default one, which means no need to create seperately
     */ 
    public Calci(){
        a = this.a;
        b = this.b;
    }
}
class Main{
     public static void main(String[] args){
         Calci c = new Calci();
         c.a = 1;
         c.b = 2;
    }
}
                **************************************************
                **************************************************
                         PARAMETERIZED CONSTRUCTOR

//parameterized constructor can have one or more arguments
class Calci{
    int a;
    int b;
    //constructor with single parameter
    public Calci(int a){
         /*whenever we are having the same name for local and instance variables, using this keyword will helps us 
          *the variable 'a' within this method is local variable and within this class is instance variable
          *this keyword will initialize the value of a local variable to instance variable
          *if we do not use this keyword, we get a value as zero
          */
        this.a = a;
        this.b = a;
    }
    //constructor with two parameters
    public Calci(float f,int n){
        a = (int)f;
        b = n;
    }
}
class Main{
     public static void main(String[] args){
         Calci c = new Calci(3); //a parameterized call with a single parameter
         Calci a = new Calci(1.2f,2); //a parameterized call with two parameters
    }
}